---
title: "The VS Code Text Editor"
pagetitle: "VS Code"
highlight-style: github
number-sections: true
author: Jelmer Poelstra
---

```{r knitr_options, echo=FALSE}
knitr::opts_chunk$set(eval = FALSE, class.output = "bash-out")
```

-----

<br>

In this module, we will learn the basics of a fancy text editor called
_VS Code_ (in full, Visual Studio Code).
Conveniently, we can use a version of this editor
(sometimes referred to as _Code Server_)
in our browser via the OSC OnDemand
website.

**We will use VS Code throughout the workshop as practically a one-stop**
**solution for our computing activities at OSC**.
This is also how I use this editor in my daily work.

To emphasize the additional functionality relative to basic text editors
like Notepad and TextEdit,
editors like VS Code are also referred to as "IDEs":
_Integrated Development Environments_.
If you've ever worked with R,
the RStudio program is another good example of an IDE.

<br>

## Starting VS Code at OSC

In the previous module,
Mike already guided us through starting a VS Code session via OnDemand,
but for the sake of completeness, instructions to do so are also shown below. 

:::{.callout-note collapse="true"}
## Starting VS Code at OSC
1. Log in to OSC's OnDemand portal at <https://ondemand.osc.edu>.
2. In the blue top bar, select `Interactive Apps`
   and then near the bottom of the dropdown menu, click `Code Server`.
3. In the form that appears on a new page:
   - Make sure that `Number of hours` is at least `4`
   - Click `Launch`.
4. On the next page, once the top bar of the box has turned green
   and says `Runnning`, click `Connect to VS Code`.
   
   <figure>
   <p align="center">
   <img src=img/osc-code-launch_ed.png width="80%">
   </p>
   </figure>
:::

<br>

## Getting started with VS Code

<p align="left">
<img src=img/vscode-welcome_ed.png width="80%">
</p>
   
### Side bars

The **Activity Bar** (narrow side bar) on the far left has:

- A &nbsp; {{< fa bars >}} &nbsp; ("hamburger menu" icon) in the top,
  which has most of the standard menu items that you often find in
  a top bar, like `File`.

- A &nbsp; {{< fa cog >}} &nbsp; (cog wheel icon) in the bottom,
  through which you can mainly access _settings_.
  
- A bunch of icons in the middle that serve to switch between
  different options for the **(wide) Side Bar**,
  which can show one of the following:

  - **_Explorer_**: File browser (and, e.g., an outline for the active file)
  - **_Search_**: To search recursively across all files in the active folder
  - _Source Control_: To work with version control systems like `Git`
    (not used in this workshop)
  - _Run and Debug_: For debugging your code (not used in this workshop)
  - **_Extensions_**: To install extensions (we'll install one later)

### Editor pane and `Welcome` document

The main part of the VS Code is the _editor pane_.
Whenever you open VS Code,
a tab with a `Welcome` document is automatically opened.
This provides some help for beginners, but also, for example,
a handy overview of recently opened folders.

We can also use the `Welcome` document to open a new text file by clicking
`New file` below `Start` (alternatively, click
&nbsp; {{< fa bars >}} &nbsp; => &nbsp; `File` &nbsp; => &nbsp; `New File`),
which open as a second "tab" in the editor pane.
We'll work with our own text files (scripts) starting tomorrow.

:::{.callout-tip}
## Re-open the `Welcome` document

If you've closed the `Welcome` document but want it back, click
&nbsp; {{< fa bars >}} &nbsp; => &nbsp; `Help` &nbsp; => &nbsp; `Welcome`.    

:::

### Terminal (with a Unix shell)

{{< fa user-edit >}} By default, no terminal is open in VS Code --
open one by clicking
&nbsp; {{< fa bars >}} &nbsp; => `Terminal` => `New Terminal`.

In the terminal, the prompt says `Singularity>`.
This is because in OSC OnDemand, VS Code runs inside a Singularity container
(for our purposes, it is not important what that means, exactly).

{{< fa user-edit >}} Break out of the Singularity shell to get a regular
Bash Unix shell:
**type `bash` and press <kbd>Enter</kbd>**.

In the next module, Mike will teach us how to use the Unix shell.

<p align="center">
<img src=img/vscode-terminal-editor_ed.png width="90%">
</p>

<br>

## A folder as a starting point  

Conveniently, VS Code takes a specific folder (directory) as a 
**starting point in all parts of the program**:

- In the file explorer in the side bar
- In the terminal
- When saving files in the editor pane.

By default, VS Code via OnDemand will **open your Home directory**.
But in this workshop,
we'll work within the scratch directory for the `PAS2250` project,
to which you have all been added, which is `/fs/ess/scratch/PAS2250`.

{{< fa user-edit >}} Let's open that folder.
Click `Open folder...` in the `Welcome` tab
(or &nbsp; {{< fa bars >}} &nbsp; => &nbsp; `File` &nbsp; => &nbsp; `Open Folder`).

You'll notice that the program completely reloads.

You might also see a pop-up like this:

<figure><p align="center"><img src=img/vscode_trust.png width="80%"></p></figure>

Check the box and click yes

:::{.callout-tip}
## Taking off where you were

Additionally, when you reopen a folder later,
VS Code will to some extent resume where you were before!

It will reopen any files you had open, and if you had an active terminal,
it will re-open a terminal.
This is very convenient, especially when you start working on multiple projects
(different folders) in VS Code and frequently switch between those.

:::

<br>

## Some VS Code tips and tricks

### Making use of your screen's real estate

Since we are using VS Code inside a browser window,
we are unfortunately losing some screen space.
Make sure to maximize the browser window and if you have a bookmarks bar,
try to hide it
(for Chrome: <kbd>Ctrl</kbd>/<kbd>⌘</kbd>+<kbd>Shift</kbd>+<kbd>B</kbd>).

You may also opt to hide the side bars using the 
{{< fa bars >}} &nbsp; => &nbsp; `View` &nbsp; => &nbsp; `Appearance` menu
(or <kbd>Ctrl</kbd>/<kbd>⌘</kbd>+<kbd>B</kbd> for the (wide) Side Bar).

### Resizing panes

You can resize panes (the terminal, editor, and side bar) by hovering
your cursor over the borders and then dragging it. 
  
### The Command Palette / Color themes

To access all the menu options that are available in VS Code,
the so-called "Command Palette" can be handy,
especially if you know what you are looking for.

To access the Command Palette, click
&nbsp; <i class="fa fa-cog"></i> &nbsp; and then `Command Palette`
(or press <kbd>F1</kbd> or
<kbd>Ctrl</kbd>/<kbd>⌘</kbd>+<kbd>Shift</kbd>+<kbd>P</kbd>).

:::{.exercise}
#### On Your Own: Try a few color themes {-}

Open the Command Palette and start typing "color theme",
and you'll see the relevant option pop up.

Then, try out a few themes and see what you like!

(You can also access the Color Themes option via
&nbsp; <i class="fa fa-cog"></i> &nbsp; => `Color Theme`.)

:::{.callout-tip collapse="true"}
## "Solution" (click here)
"*Quiet Light*" is the best one {{< iconify twemoji winking-face >}}
:::

:::

<br>
<br>

-----

-----

## Addendum: keyboard shortcuts {-}

Working with keyboard shortcuts (also called "keybindings")
for common operations can be a lot faster than using your mouse.
Below are some useful ones for VS Code
(for Mac, replace <kbd>Ctrl</kbd> with <kbd>⌘</kbd>).

:::{.callout-note}
## Keyboard shortcut cheatsheet

For a single-page PDF overview of keyboard shortcuts for your operating system:
&nbsp; {{< fa bars >}} &nbsp; => &nbsp; `Help` &nbsp; =>
&nbsp; `Keyboard Shortcut Reference`.
(Or for direct links to these PDFs:
[Windows](https://code.visualstudio.com/shortcuts/keyboard-shortcuts-windows.pdf) /
[Mac](https://code.visualstudio.com/shortcuts/keyboard-shortcuts-macos.pdf) /
[Linux](https://code.visualstudio.com/shortcuts/keyboard-shortcuts-linux.pdf).)

:::

- *Open a terminal*: <kbd>Ctrl</kbd>+<kbd>\`</kbd> or
  <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>C</kbd>.

- *Toggle between the terminal and the editor pane*:
  <kbd>Ctrl</kbd>+<kbd>`</kbd> and <kbd>Ctrl</kbd>+<kbd>1</kbd>.

- *Toggle the (wide) Side Bar*: <kbd>Ctrl</kbd>+<kbd>B</kbd> 

- *Line actions*:
  
  - <kbd>Ctrl</kbd>+<kbd>X</kbd> / <kbd>C</kbd> will **cut/copy the entire line**
    where the cursor is, when nothing is selected (!)
  
  - <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>K</kbd> will **delete a line**

  - <kbd>Alt</kbd>+<kbd>⬆</kbd>/<kbd>⬇</kbd> will **move lines** up or down.

- *Multiple cursors*: Press & hold <kbd>Ctrl</kbd>+<kbd>Shift</kbd>,
  then <kbd>⬆</kbd>/<kbd>⬇</kbd> arrows to add cursors upwards or downwards.

- *Toggle line comment* ("comment out" code, and removing those comment signs):
  <kbd>Ctrl</kbd>+<kbd>/</kbd>

- *Split the editor window vertically*: <kbd>Ctrl</kbd>+<kbd>\\</kbd>
  (See also the options in
   &nbsp; {{< fa bars >}} &nbsp; `View` => `Editor Layout`)

:::{.callout-warning}
## Browser interference

Unfortunately, some VS Code _and_ terminal keyboard shortcuts don't work
in this setting where we are using VS Code _inside_ a browser,
because existing browser keyboard shortcuts take precedence.

If you end up using VS Code a lot in your work,
it is therefore worth switching to your own installation of the program
(see [At-home bonus: local installation](#at-home-bonus-local-installation))

:::

<br>

## At-home bonus: local installation {-}

Another nice feature of VS Code is that it is freely available for all operating
systems (and even though it is made by Microsoft, it is also open source).

Therefore, if you like the program, you can also install it on your own computer
and do your local text editing / script writing in the same environment at OSC
(it is also easy to install on OSU-managed computers,
because it is available in the Self Service software installer).

Even better, the program can be "tunneled into" OSC,
so that your working directory for the entire program can be at OSC
rather than on your local computer.
This gives the same experience as using VS Code through OSC OnDemand,
except that you're not working witin a browser window,
which has some advantages
(also: no need to fill out a form, or to break out of the Singularity shell).

To install VS Code on your own machine, follow these instructions:
[Windows](https://code.visualstudio.com/docs/setup/windows) / 
[Mac](https://code.visualstudio.com/docs/setup/mac) / 
[Linux](https://code.visualstudio.com/docs/setup/linux).

To SSH-tunnel VS Code into OSC, see
[these instructions](https://mcic-osu.github.io/pracs-sp21/w06_UA_ssh.html#set-up-your-local-vs-code-to-ssh-tunnel-into-osc)
(they are a bit rudimentary, ask Jelmer if you get stuck).
