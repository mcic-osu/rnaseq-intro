{
  "hash": "bf9aef1469dd2ec582dedd36fbfa9213",
  "result": {
    "markdown": "---\ntitle: \"The VS Code Text Editor\"\npagetitle: \"VS Code\"\nhighlight-style: github\nnumber-sections: true\nauthor: Jelmer Poelstra\ndate: 2022-07-28\n---\n\n::: {.cell}\n\n:::\n\n\n-----\n\n<br>\n\nIn this module, we will learn the basics of a fancy text editor called\n_VS Code_ (in full, Visual Studio Code).\nConveniently, we can use a version of this editor\n(sometimes referred to as _Code Server_)\nin our browser via the OSC OnDemand website.\n\n**We will use VS Code throughout these sessions as practically a one-stop**\n**solution for our computing activities at OSC**.\nThis is also how I use this editor in my daily work.\n\nTo emphasize the additional functionality relative to basic text editors\nlike Notepad and TextEdit,\neditors like VS Code are also referred to as \"IDEs\":\n_Integrated Development Environments_.\nIf you've ever worked with R,\nthe RStudio program is another good example of an IDE.\nFor our purposes, RStudio will be our IDE for R,\nand VS code will be our IDE for shell scripts and code.\n\n<br>\n\n## Starting a VS Code session in OSC OnDemand\n\nIn the previous session,\nI showed you how to start a VS Code session in OnDemand,\nbut for the sake of completeness, instructions to do so are also shown below. \n\n:::{.callout-note collapse=\"true\"}\n## Starting VS Code at OSC\n1. Log in to OSC's OnDemand portal at <https://ondemand.osc.edu>.\n2. In the blue top bar, select `Interactive Apps`\n   and then near the bottom of the dropdown menu, click `Code Server`.\n3. In the form that appears on a new page:\n   - Select an appropriate OSC project (here: `PAS0471`)\n   - The starting directory doesn't matter\n   - Make sure that `Number of hours` is at least `2`\n   - Click `Launch`.\n4. On the next page, once the top bar of the box has turned green\n   and says `Runnning`, click `Connect to VS Code`.\n   \n   <figure><p align=\"center\"><img src=img/osc-code-launch_ed.png width=\"80%\"></p></figure>\n:::\n\n<br>\n\n## Getting started with VS Code\n\n<p align=\"left\">\n<img src=img/vscode-welcome_ed.png width=\"80%\">\n</p>\n   \n### Side bars\n\nThe **Activity Bar** (narrow side bar) on the far left has:\n\n- A &nbsp; {{< fa bars >}} &nbsp; (\"hamburger menu\" icon) in the top,\n  which has most of the standard menu items that you often find in\n  a top bar, like `File`.\n\n- A &nbsp; {{< fa cog >}} &nbsp; (cog wheel icon) in the bottom,\n  through which you can mainly access _settings_.\n  \n- A bunch of icons in the middle that serve to switch between\n  different options for the **(wide) Side Bar**,\n  which can show one of the following:\n\n  - **_Explorer_**: File browser (and, e.g., an outline for the active file)\n  - **_Search_**: To search recursively across all files in the active folder\n  - _Source Control_: To work with version control systems like `Git`\n    (not used in this workshop)\n  - _Run and Debug_: For debugging your code (not used in this workshop)\n  - **_Extensions_**: To install extensions (we'll install one later)\n\n### Editor pane and `Welcome` document\n\nThe main part of the VS Code is the _editor pane_.\nWhenever you open VS Code,\na tab with a `Welcome` document is automatically opened.\nThis provides some help for beginners, but also, for example,\na handy overview of recently opened folders.\n\nWe can also use the `Welcome` document to open a new text file by clicking\n`New file` below `Start` (alternatively, click\n&nbsp; {{< fa bars >}} &nbsp; => &nbsp; `File` &nbsp; => &nbsp; `New File`),\nwhich open as a second \"tab\" in the editor pane.\nWe'll work with our own text files (scripts) starting tomorrow.\n\n:::{.callout-tip}\n## Re-open the `Welcome` document\n\nIf you've closed the `Welcome` document but want it back, click\n&nbsp; {{< fa bars >}} &nbsp; => &nbsp; `Help` &nbsp; => &nbsp; `Welcome`.    \n\n:::\n\n### Terminal (with a Unix shell)\n\n{{< fa user-edit >}} By default, no terminal is open in VS Code --\nopen one by clicking\n&nbsp; {{< fa bars >}} &nbsp; => `Terminal` => `New Terminal`.\n\nThis opens up a terminal with a Unix shell.\nIn the next session, we'll start talking about actually using the Unix shell.\n\n<br>\n\n## A folder as a starting point  \n\nConveniently, VS Code takes a specific folder (directory) as a \n**starting point in all parts of the program**:\n\n- In the file explorer in the side bar\n- In the terminal\n- When saving files in the editor pane.\n\nBy default, VS Code via OnDemand will open your Home directory.\n\nHere, we'll change to the project dir for OSC project `PAS0471`,\nwhich is `/fs/ess/PAS0471`.\n\n{{< fa user-edit >}} **Let's open that folder**.\nClick `Open folder...` in the `Welcome` tab\n(or &nbsp; {{< fa bars >}} &nbsp; => &nbsp; `File` &nbsp; => &nbsp; `Open Folder`).\n\nYou'll notice that the program completely reloads.\nAnd You might also see a pop-up like this -- you can check the box and click Yes:\n\n<figure><p align=\"center\"><img src=img/vscode_trust.png width=\"80%\"></p></figure>\n\n:::{.callout-tip}\n## Taking off where you were\n\nWhen you reopen a folder you've had open before,\nVS Code will resume where you were before in terms of:\n\n- Reopening any files you had open\n- If you had an active terminal, it will re-open a terminal.\n\nThis is quite convenient, especially when you start working on multiple projects\n(different folders) in VS Code and frequently switch between those.\n:::\n\n<br>\n\n## Some VS Code tips and tricks\n\n### Making use of your screen's real estate\n\nSince we are using VS Code inside a browser window,\nwe are unfortunately losing some screen space.\nMake sure to maximize the browser window and if you have a bookmarks bar,\nyou should consider hiding it\n(for Chrome: <kbd>Ctrl</kbd>/<kbd>⌘</kbd>+<kbd>Shift</kbd>+<kbd>B</kbd>).\n\nYou may also opt to hide the side bars using the \n{{< fa bars >}} &nbsp; => &nbsp; `View` &nbsp; => &nbsp; `Appearance` menu\n(or <kbd>Ctrl</kbd>/<kbd>⌘</kbd>+<kbd>B</kbd> for the (wide) Side Bar).\n\n### Resizing panes\n\nYou can resize panes (the terminal, editor, and side bar) by hovering\nyour cursor over the borders and then dragging it. \n  \n### The Command Palette / Color themes\n\nTo access all the menu options that are available in VS Code,\nthe so-called \"Command Palette\" can be handy,\nespecially if you know what you are looking for.\n\nTo access the Command Palette, click\n&nbsp; <i class=\"fa fa-cog\"></i> &nbsp; and then `Command Palette`\n(or press <kbd>F1</kbd> or\n<kbd>Ctrl</kbd>/<kbd>⌘</kbd>+<kbd>Shift</kbd>+<kbd>P</kbd>).\n\n:::{.exercise}\n#### On Your Own: Try a few color themes {-}\n\nOpen the Command Palette and start typing \"color theme\",\nand you'll see the relevant option pop up.\n\nThen, try out a few themes and see what you like!\n\n(You can also access the Color Themes option via\n&nbsp; <i class=\"fa fa-cog\"></i> &nbsp; => `Color Theme`.)\n:::\n\n<br>\n<br>\n\n-----\n\n## At-home reading\n\n### keyboard shortcuts {-}\n\nWorking with keyboard shortcuts (also called \"keybindings\")\nfor common operations can be a lot faster than using your mouse.\nBelow are some useful ones for VS Code\n(for Mac, replace <kbd>Ctrl</kbd> with <kbd>⌘</kbd>).\n\n:::{.callout-note}\n#### Keyboard shortcut cheatsheet\n\nFor a single-page PDF overview of keyboard shortcuts for your operating system:\n&nbsp; {{< fa bars >}} &nbsp; => &nbsp; `Help` &nbsp; =>\n&nbsp; `Keyboard Shortcut Reference`.\n(Or for direct links to these PDFs:\n[Windows](https://code.visualstudio.com/shortcuts/keyboard-shortcuts-windows.pdf) /\n[Mac](https://code.visualstudio.com/shortcuts/keyboard-shortcuts-macos.pdf) /\n[Linux](https://code.visualstudio.com/shortcuts/keyboard-shortcuts-linux.pdf).)\n\n:::\n\n- *Open a terminal*: <kbd>Ctrl</kbd>+<kbd>\\`</kbd> (backtick) or\n  <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>C</kbd>.\n\n- *Toggle between the terminal and the editor pane*:\n  <kbd>Ctrl</kbd>+<kbd>`</kbd> and <kbd>Ctrl</kbd>+<kbd>1</kbd>.\n\n- *Toggle the (wide) Side Bar*: <kbd>Ctrl</kbd>+<kbd>B</kbd> \n\n- *Line actions*:\n  \n  - <kbd>Ctrl</kbd>+<kbd>X</kbd> / <kbd>C</kbd> will **cut/copy the entire line**\n    where the cursor is, when nothing is selected (!)\n  \n  - <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>K</kbd> will **delete a line**\n\n  - <kbd>Alt</kbd>+<kbd>⬆</kbd>/<kbd>⬇</kbd> will **move lines** up or down.\n\n- *Multiple cursors*: Press & hold <kbd>Ctrl</kbd>+<kbd>Shift</kbd>,\n  then <kbd>⬆</kbd>/<kbd>⬇</kbd> arrows to add cursors upwards or downwards.\n\n- *Toggle line comment* (\"comment out\" code, and removing those comment signs):\n  <kbd>Ctrl</kbd>+<kbd>/</kbd>\n\n- *Split the editor window vertically*: <kbd>Ctrl</kbd>+<kbd>\\\\</kbd>\n  (See also the options in\n   &nbsp; {{< fa bars >}} &nbsp; `View` => `Editor Layout`)\n\n:::{.callout-warning}\n#### Browser interference\n\nUnfortunately, some VS Code _and_ terminal keyboard shortcuts don't work\nin this setting where we are using VS Code _inside_ a browser,\nbecause existing browser keyboard shortcuts take precedence.\n\nIf you end up using VS Code a lot in your work,\nit is therefore worth switching to your own installation of the program &mdash;\nsee the section below.\n:::\n\n<br>\n\n### Local VS Code installation {-}\n\nAnother nice feature of VS Code is that it is freely available for all operating\nsystems (and even though it is made by Microsoft, it is also open source).\n\nTherefore, if you like the program, you can also install it on your own computer\nand do your local text editing / script writing in the same environment at OSC\n(it is also easy to install on OSU-managed computers,\nbecause it is available in the OSU \"Self Service\" software installer).\n\nEven better, the program can be \"tunneled into\" OSC,\nso that your working directory for the entire program can be at OSC\nrather than on your local computer.\nThis gives the same experience as using VS Code through OSC OnDemand,\nexcept that you're not working witin a browser window,\nwhich has some advantages\n(also: no need to fill out a form, and you'll never run out of time).\n\nTo install VS Code on your own machine,\nfollow these instructions from the VS Code website:\n[Windows](https://code.visualstudio.com/docs/setup/windows) / \n[Mac](https://code.visualstudio.com/docs/setup/mac) / \n[Linux](https://code.visualstudio.com/docs/setup/linux).\n\nTo SSH-tunnel VS Code into OSC, see\n[these instructions on the SSH reference page on this website](../info/osc_ssh.html#set-up-your-local-vs-code-to-ssh-tunnel-into-osc)\n(they are a bit rudimentary, ask me if you get stuck).\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}