{
  "hash": "fa9445c550de6c13924febee9e51ef2f",
  "result": {
    "markdown": "---\ntitle: \"Transferring files to and from OSC\"\npagetitle: \"File transfer\"\nhighlight-style: github\nnumber-sections: true\nauthor: Jelmer Poelstra\ndate: 2023-07-18\n---\n\n::: {.cell}\n\n:::\n\n\n-----\n\n<br>\n\n## Introduction\n\nThere are several ways of transferring files between your computer and OSC:\n\n| Method                            | Transfer size         | CLI or GUI        | Ease of use   | Flexibility/options   |\n|-----------------------------------|-----------------------|-------------------|---------------|-----------------------|\n| **OnDemand Files menu**           | smaller (<1GB)        | GUI               | Easy          | Limited               |\n| **Remote transfer commands**      | smaller (<1GB)        | CLI               | Moderate      | Extensive             |\n| **SFTP**                          | larger (>1GB)         | Either            | Moderate      | Limited               |\n| **Globus**                        | larger (>1GB)         | GUI               | Moderate [^1] | Extensive             |\n\n[^1]: But the initial setup for Globus is quite involved and a bit counterintuitive.\n\nThis page will cover each of those in more detail below.\n\n::: {.callout-tip}\n#### Download directly from the web using commands at OSC\nIf you need files that are at a publicly accessible location on the internet\n(for example, NCBI reference genome data),\nyou don't need to download these to your computer and _then_ upload them to OSC.\n\n**Instead, you can use commands for downloading files** directly to OSC,\nlike `wget` or `curl`.\nThis will be covered in one of the main sessions.\n:::\n\n<br>\n\n## OnDemand Files menu\n\nFor small transfers (below roughly 1 GB),\nyou might find it easiest to use the Upload and Download\nbuttons in the **OSC OnDemand** \"Files\" menu &mdash;\ntheir usage should be pretty intuitive.\n  \n<p align=\"center\"><img src=img/ondemand_transfer.png width=\"80%\"></p>\n\n<br>\n\n## Remote transfer commands\n\nFor small transfers, you can also use a **remote transfer command** like `scp`,\nor a more advanced one like `rsync` or `rclone`.\nSuch commands can provide a more convenient transfer method than OnDemand\nif you want to keep certain\ndirectories synced between OSC and your computer.\n\nThe reason you shouldn't use this for very large transfers is that the transfer\nwill happen using a login node.\n\n### `scp`\n\nOne option is `scp` (secure copy), which works much like the regular `cp` command,\nincluding that you'll need `-r` for recursive transfers.\n\nThe key difference is that we have to somehow refer to a path on a remote computer,\nand we do so by starting with the remote computer's address,\nfollowed by `:`, and then the path:\n\n```bash\n# Copy from remote (OSC) to local (your computer):\nscp <user>@pitzer.osc.edu:<remote-path> <local-path>\n\n# Copy from local (your computer) to remote (OSC)\nscp <local-path> <user>@pitzer.osc.edu:<remote-path>\n```\n\nHere are two examples of copying from OSC to your local computer:\n\n```bash\n# Copy a file from OSC to a local computer - namely, to your current working dir ('.'):\nscp jelmer@pitzer.osc.edu:/fs/ess/PAS0471/jelmer/mcic-scripts/misc/fastqc.sh .\n\n# Copy a directory from OSC to a local computer - namely, to your home dir ('~'):\nscp -r jelmer@pitzer.osc.edu:/fs/ess/PAS0471/jelmer/mcic-scripts ~\n```\n\nAnd two examples of copying from your local computer to OSC:\n\n```bash\n# Copy a file from your computer to OSC --\n# namely, a file in from your current working dir to your home dir at OSC:\nscp fastqc.sh jelmer@pitzer.osc.edu:~\n\n# Copy a file from my local computer's Desktop to the Scratch dir for PAS0471:\nscp /Users/poelstra.1/Desktop/fastqc.sh jelmer@pitzer.osc.edu:/fs/scratch/PAS0471\n```\n\nSome nuances for remote copying:\n\n- As the above code implies, in both cases (remote-to-local and local-to-remote),\n  you will **issue the copying commands from your local computer.**\n\n- For the remote computer (OSC), the **path should always be absolute**,\n  whereas that for your local computer can be either relative or absolute.\n\n- Since all files can be accessed at the same paths at Pitzer and at Owens,\n  it doesn't matter whether you use `@pitzer.osc.edu` or `@owens.osc.edu` in\n  the `scp` command.\n \n::: {.callout-note}\n#### Transferring directly to and from OneDrive\n\nIf your OneDrive is mounted on or synced to your local computer\n(i.e., if you can see it in your computer's file brower),\nyou can also transfer directly between OSC and OneDrive.\n\nFor example, the path to my OneDrive files on my laptop is:  \n`/Users/poelstra.1/Library/CloudStorage/OneDrive-TheOhioStateUniversity`.  \nSo if I had a file called `fastqc.sh` in my top-level OneDrive dir,\nI could transfer it to my Home dir at OSC as follows:\n\n```bash\nscp /Users/poelstra.1/Library/CloudStorage/OneDrive-TheOhioStateUniversity jelmer@pitzer.osc.edu:~\n```\n\n:::\n\n<br>\n\n### `rsync`\n\nAnother option, which I can recommend,\nis the `rsync` command,\nespecially when you have directories that you repeatedly want to sync:\n**`rsync` won't copy any files that are identical in source and destination**.\n\nA useful combination of options is `-avz --progress`:\n\n- `-a` enables archival mode (among other things, this makes it work recursively).\n- `-v` increases verbosity &mdash; tells you what is being copied.\n- `-z` enables compressed file transfer (=> generally faster).\n- `--progress` to show transfer progress for individual files.\n\nThe way to refer to remote paths is the same as with `scp`.\nFor example, I could copy a `dir_with_results` in my local Home dir to my\nOSC Home dir as follows:\n\n```bash\nrsync -avz --progress ~/dir_with_results jelmer@owens.osc.edu:~\n```\n\n::: {.callout-warning}\n#### Trailing slashes in `rsync`\n\nOne tricky aspect of using `rsync` is that the presence/absence of a\n**trailing slash for source directories** makes a difference for its behavior.\nThe following commands work as intended &mdash;\nto create a backup copy of a `scripts` dir inside a dir called `backup`[^2]:\n\n[^2]: For simplicity, these commands are copying between local dirs,\n      which is also possible with `rsync`.\n\n```bash\n# With trailing slash: copy the *contents* of source \"scripts\" into target \"scripts\":\nrsync -avz scripts/ backup/scripts\n\n# Without trailing slash: copy the source dir \"scripts\" into target dir \"backup\"\nrsync -avz scripts backup\n```\n\nBut these commands don't:\n\n```bash\n# This would result in a dir 'backup/scripts/scripts':\nrsync -avz scripts backup/scripts\n\n# This would copy the files in \"scripts\" straight into \"backup\":\nrsync -avz scripts/ backup\n```\n\n:::\n\n<br>\n\n## SFTP\n\nThe first of two options for larger transfers is **SFTP**.\nYou can use the **`sftp` command** when you have access to a Unix shell on your computer,\nand this what I'll cover below.\n\n::: {.callout-note}\n#### SFTP with a GUI\nIf you have Windows without e.g. [WSL](https://learn.microsoft.com/en-us/windows/wsl/install)\nor Git Bash\n(see the top of the [SSH page on this site](osc_ssh.qmd) for more details),\nyou can use a GUI-based SFTP client instead like\n[WinSCP](https://winscp.net/eng/index.php), [Cyberduck](https://cyberduck.io/),\nor [FileZilla](https://filezilla-project.org).\nCyberDuck also works on Mac, and FileZilla works on all operating systems,\nif you prefer to do SFTP transfers with a GUI, but I won't cover their usage here.\n:::\n\n### Logging in\n\nTo log in to OSC's SFTP server, issue the following command in your local\ncomputer's terminal,\nsubstituting `<user>` by your OSC username:\n\n```bash\nsftp <user>@sftp.osc.edu   # E.g., 'jelmer@sftp.osc.edu'\n```\n\n``` {.bash-out}\nThe authenticity of host 'sftp.osc.edu (192.148.247.136)' can't be established.\nED25519 key fingerprint is SHA256:kMeb1PVZ1XVDEe2QiSumbM33w0SkvBJ4xeD18a/L0eQ.\nThis key is not known by any other names\nAre you sure you want to continue connecting (yes/no/[fingerprint])?\n```\n\nIf this is your first time connecting to OSC SFTP server,\nyou'll get a message like the one shown above:\nyou should type `yes` to confirm.\n\nThen, you may be asked for your OSC password, and after that,\nyou should see a \"welcome\" message like this:\n\n``` {.bash-out}\n******************************************************************************\n\nThis system is for the use of authorized users only.  Individuals using\nthis computer system without authority, or in excess of their authority,\nare subject to having all of their activities on this system monitored\nand recorded by system personnel.  In the course of monitoring individuals\nimproperly using this system, or in the course of system maintenance,\nthe activities of authorized users may also be monitored.  Anyone using\nthis system expressly consents to such monitoring and is advised that if\nsuch monitoring reveals possible evidence of criminal activity, system\npersonnel may provide the evidence of such monitoring to law enforcement\nofficials.\n\n******************************************************************************\nConnected to sftp.osc.edu.\n```\n\nNow, you will have an `sftp` prompt (`sftp>`) instead of a regular shell prompt.\n\nFamiliar commands like `ls`, `cd`, and `pwd` will operate on the remote computer\n(OSC, in this case),\nand there are **local counterparts for them: `lls`, `lcd`, `lpwd`** &mdash;\nfor example:\n\n```bash\n# NOTE: I am prefacing sftp commands with the 'sftp>' prompt to make it explicit\n#       these should be issued in an sftp session; but don't type that part.\nsftp> pwd\n```\n\n``` {.bash-out}\nRemote working directory: /users/PAS0471/jelmer\n```\n\n```bash\nsftp> lpwd\n```\n\n``` {.bash-out}\nLocal working directory: /Users/poelstra.1/Desktop\n```\n\n### Uploading files to OSC\n\nTo upload files to OSC, use `sftp`'s **`put` command**.\n\nThe syntax is `put <local-path> <remote-path>`,\nand unlike with `scp` etc., you don't need to include the address to the remote\n(because in an `stfp` session, you are simultaneously connected to both computers).\nBut like with `cp` and `scp`, you'll need the `-r` flag for recursive transfers,\ni.e. transferring a directory and its contents.\n\n```bash\n# Upload fastqc.sh in a dir 'scripts' on your local computer to the PAS0471 Scratch dir:\nsftp> put scripts/fastqc.sh /fs/scratch/PAS0471/sandbox\n\n# Use -r to transfer directories:\nsftp> put -r scripts /fs/scratch/PAS0471/sandbox\n\n# You can use wildcards to upload multiple files:\nsftp> put scripts/*sh /fs/scratch/PAS0471/sandbox\n```\n\n::: {.callout-warning}\n#### `sftp` is primitive\nThe `~` shortcut to your Home directory does not work in `sftp`!\n\n`sftp` is generally quite primitive and you also cannot use, for example,\ntab completion or the recalling of previous commands with the up arrow.\n:::\n\n### Downloading files from OSC\n\nTo download files from OSC, use the `get` command,\nwhich has the syntax `get <remote-path> <local-path>`\n(this is the other way around from `put` in that the remote path comes first,\nbut the same in that both use the order `<source> <target>`, like `cp` and so on).\n\nFor example:\n\n```bash\nsftp> get /fs/scratch/PAS0471/mcic-scripts/misc/fastqc.sh .\n\nsftp> get -r /fs/scratch/PAS0471/sandbox/ .\n```\n\n### Exiting\n\nWhen you're done, you can type `exit` or press <kbd>Ctrl</kbd>+<kbd>D</kbd>\nto exit the `sftp` prompt.\n\n<br>\n\n## Globus\n\nThe second option for large transfers is **Globus**,\nwhich has a browser-based GUI,\nand is especially your best bet for very large transfers.\nSome advantages of using Globus are that:\n\n- It checks whether all files were transferred correctly and completely\n- It can pause and resume automatically when you e.g. turn off your computer for a while\n- It can be used to share files from OSC directly with collaborators even at\n  different institutions.\n\nGlobus does need some setup,\nincluding the installation of a piece of software that will run in the\nbackground on your computer.\n\n- Globus installation and configuration instructions:\n  [Windows](https://docs.globus.org/how-to/globus-connect-personal-windows) /\n  [Mac](https://docs.globus.org/how-to/globus-connect-personal-mac) /\n  [Linux](https://docs.globus.org/how-to/globus-connect-personal-linux)\n- [Globus transfer instructions](https://docs.globus.org/how-to/get-started/)\n- [OSC's page on Globus](https://www.osc.edu/resources/getting_started/howto/howto_use_globus_overview)\n\n<br><br>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}