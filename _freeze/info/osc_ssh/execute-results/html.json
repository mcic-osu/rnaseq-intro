{
  "hash": "b83f55386c8488fb5f8d68fe901f9143",
  "result": {
    "markdown": "---\ntitle: \"Connecting to OSC through SSH\"\npagetitle: \"Using SSH\"\nhighlight-style: github\nnumber-sections: true\nauthor: Jelmer Poelstra\ndate: 2023-07-18\n---\n\n::: {.cell}\n\n:::\n\n\n-----\n\n<br>\n\n## Introduction\n\nThis page will first go through the basics of connecting to OSC with SSH,\nusing the `ssh` command.\n\nIf you use `ssh` frequently, or plan to do so, the next two sections will show\nyou two useful tricks:\n\n- [Avoid being prompted for your OSC password](#avoid-being-prompted-for-your-osc-password)\n- [Set up a shortcut for your SSH connection name](#use-a-shorter-name-for-your-ssh-connection).\n\nFinally, something more specific but incredibly useful if you like VS Code,\nand have it installed locally, is to\n[SSH-tunnel VS Code to OSC](#set-up-your-local-vs-code-to-ssh-tunnel-into-osc).\n\n::: {.callout-caution collapse=\"true\"}\n#### SSH and Unix shells on Windows\nIf you have a Windows computer,\nyou can instead use a GUI-based SSH client like [`PuTTY`](https://www.putty.org/).\n\nAlternatively, for an experience more similar to that if you did have a Unix-based\noperating system,\nyou can install either of the following,\nwhich will enable you to get a terminal program that does run a Unix shell:\n\n- [**Windows Subsystem for Linux (WSL)**](https://learn.microsoft.com/en-us/windows/wsl/install)\n  &mdash; the more involved option, this will basically run a Linux Virtual Machine on your computer.\n\n- **Git for Windows**,\n  which comes with a Unix (Bash) shell &mdash; \"Git Bash\".\n  To install this, [download it from this page](https://git-scm.com/download/win) and \n  install it using all the default settings for the installation, except:\n\n  - In \"*Adjusting Your PATH Environment*\", select \"*Use Git from Git Bash Only*\".\n\n  - In the prompt \"*Configuring the Line Ending Conversions*\",\n    choose \"*Checkout as-is, commit as-is*\".\n\n:::\n\n<br>\n\n## Basic SSH connection in a terminal\n\nTo connect to OSC or other remote computers without using a web portal like\nOnDemand, you can use SSH.\nYou can do so via the **`ssh` command** if you have a Linux or a Mac computer,\nsince these two operating systems are both Unix-based and have built-in terminals\nwith Unix shells.\n\nHere, I'll briefly demonstrate how to use the `ssh` command.\nOn your own computer,\nopen a terminal application and input the command `ssh <user>@<host>`, where:\n\n  - `<user>` should be replaced by your OSC username, and\n  - `<host>` should be replaced by the name of the computer you want to connect to:\n    - `pitzer.osc.edu` to connect to the Pitzer cluster\n    - `owens.osc.edu` to connect to the Owens cluster\n\nFor example, if I (username `jelmer`) wanted to log in to the Pitzer cluster,\nI would use:\n\n```bash\nssh jelmer@pitzer.osc.edu\n```\n\n``` {.bash-out}\nThe authenticity of host 'pitzer.osc.edu' can't be established.\nRSA key fingerprint is 2a:b6:f6:8d:9d:c2:f8:2b:8c:c5:03:06:a0:f8:59:12.\nAre you sure you want to continue connecting (yes/no)?\n```\n\nIf this is the first time you are connecting to Pitzer via SSH, \nyou’ll encounter a message similar to the one above.\nWhile the phrase _\"The authenticity of host 'pitzer.osc.edu' can't be established.\"_\nsounds ominous, you will always get this warning when you attempt to connect to a\nremote computer for the first time, and you should type `yes` to proceed\n(you then won't see this message again).\n\nYou should now be prompted for your password.\nType it in carefully because no characters or even *s will appear on the screen,\nand then press <kbd>Enter</kbd>.\n\n```bash\njelmer@pitzer.osc.edu's password:\n``` \n\nIf you entered your password correctly,\nyour shell is now connected to OSC rather than operating on your own computer.\nThat is, you'll have shell access very much in the same way as when using the\n\"Pitzer Shell Access\" button on OSC OnDemand.\n(The key difference between SSH-ing in this way rather than using OnDemand\nis that the terminal is not running inside your browser, which can be convenient.)\n\n::: {.callout-tip}\n#### SSH shortcuts\nIf you use SSH a lot to connect to OSC,\ntyping `ssh <username>@pitzer.osc.edu` every time and then providing your password\ncan get pretty tedious.\nThe next two sections will show you how to make this go faster.\n:::\n\n<br>\n\n## Avoid being prompted for your OSC password\n\nIf you take the following steps,\nyou will no longer be promoted for your OSC password every time you log in to\nOSC using SSH.\n\nBoth steps should be done in a terminal *on your local machine*:\n\n1.  **Generate a public-private SSH key-pair:**\n\n    ``` {.bash}\n    ssh-keygen -t rsa\n    ```\n\n    You'll get some output and will then be asked several questions,\n    but in each case, you can just press <kbd>Enter</kbd> to select the default answer.\n\n2.  **Transfer the public key to OSC's clusters:**\n\n    ```bash\n    # Replace <user> by your username, e.g. \"ssh-copy-id jelmer@owens.osc.edu\"\n    ssh-copy-id <user>@owens.osc.edu\n    ssh-copy-id <user>@pitzer.osc.edu\n    ```\n\nTest if it works by runnning:\n\n```bash\n# Try connecting to Owens (once again, replace '<user>' by your username):\nssh <user>@owens.osc.edu\n\n# Try connecting to Pitzer (once again, replace '<user>' by your username):\nssh <user>@owens.osc.edu\n```\n\n::: {.callout-note}\n#### More instructions\nSee also this\n[Tecmint post](https://www.tecmint.com/ssh-passwordless-login-using-ssh-keygen-in-5-easy-steps/)\nin case you're struggling.\n:::\n\n<br>\n\n## Use a shorter name for your SSH connection\n\nYou can easily set up alternative ways of referring to you SSH connection (i.e., \"aliases\"),\nsuch as shortening `jelmer@pitzer.osc.edu` to `jp`,\nby saving these aliases in a text file `~/.ssh/config`, as shown below.\n\nThese two steps should both be done *on your local machine*:\n\n1. **Create a file called `~/.ssh/config`:**\n\n    ```bash\n    touch ~/.ssh/config\n    ```\n\n2.  **Open the file in a text editor and add your alias(es) in the following format:**\n\n    ```\n    Host <arbitrary-alias-name>    \n        HostName <remote-address>\n        User <username>\n    ```\n\n    For instance, my file contains the following so as to connect to Pizer with\n    `jp` and to Owens with `jo`:\n\n    ```\n    Host jp\n        HostName pitzer.osc.edu\n        User jelmer\n\n    Host jo\n        HostName owens.osc.edu\n        User jelmer\n    ```\n\n<br>\n\nNow, you just need to use your, preferably very short, alias to log in\n&mdash; and if you did the previous no-password setup,\nyou won't even be prompted for your password!\n\n```bash\nssh jp\n```\n\nPerhaps even more conveniently,\nthese shortcuts will also work with `scp` and `rsync`!\nFor example:\n\n```bash\nrsync ~/scripts op:/fs/scratch/PAS0471\n```\n\n<br>\n\n## Set up your local VS Code to SSH tunnel into OSC\n\nIf you want to use VS Code to write code, have a shell, and interact with files\nat OSC directly,\nyou don't necessarily need to use the VS Code (Code Server) in OSC OnDemand.\nYou can also make your local VS Code installation \"**SSH tunnel**\" into OSC.\n\nThis is a more convenient way of working because it's quicker to start,\nwill never run out of alotted time,\nand because you are not working inside a browser,\nyou have more screen space and no keyboard shortcut interferences.\n\nThe set-up is pretty simple\n(see also [these instructions](https://code.visualstudio.com/docs/remote/ssh) if you get stuck),\nand should also work on Windows:\n\n1.  If necessary, install VS Code\n    (instructions for [Windows](https://code.visualstudio.com/docs/setup/windows) /\n    [Mac](https://code.visualstudio.com/docs/setup/mac) /\n    [Linux](https://code.visualstudio.com/docs/setup/linux))\n    on your computer, and open it.\n\n2.  Install the VS Code [\"Remote Development extension pack\"](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack):\n    open the Extensions side bar (click the icon with the four squared in the far left),\n    search for \"Remote Development extension pack\", and click \"Install\".\n\n3.  Open the Command Palette (<kbd>F1</kbd> or <kbd>Ctrl</kbd>+<kbd>Shift</kbd><kbd>P</kbd>)\n    and start typing \"_Remote SSH_\".\n    \n    Then, select `Remote-SSH: Connect to Host…` and specify your SSH connection:\n    e.g. `ssh jelmer@pitzer.osc.edu`\n    (you'll have to do this separately for Pitzer and Owens if you want to be\n    able to connect to both).\n\n4.  If you did the [no-password setup described above](#avoid-being-prompted-for-your-osc-password)\n    (recommended!),\n    you shouldn't be prompted for a password and VS Code will connect to OSC!\n    \n    If you're asked about the operating system of the host, **select Linux**,\n    which is the operating system of the OSC clusters.\n    \n::: {.callout-warning}\nJust be aware that you'll now be on a Login node\n(and not on a Compute node like when you use VS Code through OnDemand),\nso avoid running analyses directly in the terminal, and so on. \n:::\n\n<br> <br>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}