{
  "hash": "5eb8c10d968c389769813d4ec02faf76",
  "result": {
    "markdown": "---\ntitle: \"Common shell commands\"\nhighlight-style: github\nnumber-sections: true\nauthor: Jelmer Poelstra\ndate: 2023-08-04\n---\n\n::: {.cell}\n\n:::\n\n\n-----\n\n<br>\n\n## Common shell commands and notation {-}\n\nBelow is a list of common and useful-for-us Unix shell commands and features.\n\nWhile it's not an exhaustive list, getting a grasp on the commands and\nfeatures above will go a long way in allowing you to work in the Unix shell.\nWe should see nearly all of these in action during our sessions.\n\nThey are grouped into some general categories,\nwith small examples between parentheses:\n\n- **Navigating in the Terminal**\n  - `pwd` &mdash; returns (prints) your working directory\n  - `cd` &mdash; change working directory\n- **Viewing Files**\n  - `cat` &mdash; print the entire contents of a file\n  - `head` &mdash; print the first lines of a file\n  - `tail` &mdash; print the last lines of a file\n  - `less` &mdash; view the contents of a file in a \"pager\" (press `q` to quit/exit!)\n- **Managing/Organizing Files**\n  - `ls` &mdash; list contents of directory\n  - `mkdir` &mdash; create a new directory\n  - `rm` &mdash; remove/delete a file or directory\n  - `cp` &mdash; copy files/directories to a new location\n  - `mv` &mdash; move/rename files/directories to a new location\n- **Working With Compressed Files**\n  - `gzip`/`gunzip` &mdash; compress/uncompress a file with gzip compression (`.gz`)\n  - `unzip` &mdash; uncompress a zip (`.zip`) file\n  - `zcat` &mdash; print the contents of a compressed file to the screen\n- **Assessing Files**\n  - `md5`/`shasum` &mdash; check file integrity via \"checksums\" (fingerprints) for a file\n  - `grep` &mdash; search a text file for lines containing a pattern of text\n  - `wc` &mdash; return number of lines, words, characters in a file\n- **Editing Files (or other data)**\n  - `sort` &mdash; Sort data, can sort a file by one or more columns (`sort metadata/meta.tsv`) \n  - `cut` &mdash; Select one or more columns from a tabular file (`cut -f 1,3 metadata/meta.tsv`)\n  - `uniq` &mdash; Exclude duplicate entries in a list (`cut -f1 metadata/meta.tsv | uniq`)\n  - `tr` &mdash; Substitute a character (class) for another (`echo acgt | tr A-Z a-z`)\n  - `sed` &mdash; A powerful & flexible command, but most often used to find-and-replace text.\n  - `awk` &mdash; A powerful & flexible command, most useful to work with tabular (e.g., CSV, TSV, GFF/GTF) files \n- **Miscellaneous**\n  - `wget` &mdash; download a file from online (`wget <URL>`)\n  - `man` &mdash; get help (manual) for a command (`man ls`)\n- **Special Notation**\n  - `|` &mdash; The pipe, to use the output of a command as the input for another command (`ls | wc -l`)\n  - `~` &mdash; The path to your Home directory (`cp data/fastq/* ~`)\n  - `.` &mdash; Your current working dir (`cp data/fastq/* .`)\n  - `..` &mdash; One directory up from your current working dir (`cd ..`)\n  - `$USER` &mdash; Your user name  (`echo $USER`)\n  - `$HOME` &mdash; The path to your Home directory (`echo $HOME`)\n- **Shell wildcards**\n  - `*` &mdash; matches any number of any character, including nothing (`ls *fastq.gz`)\n  - `?` &mdash; matches any single character (`ls *fast?`)\n  - `[]` &mdash; matches a single character of those listed between brackets, e.g. `[012]` matches 0, 1, or 2\n  - `[^]` &mdash; matches a single character _**not**_ listed between brackets, e.g. `[0-9]` excludes any numbers\n\n<br>",
    "supporting": [
      "shell_commands_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}